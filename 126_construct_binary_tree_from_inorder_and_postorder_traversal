/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(vector<int> &inorder,int x,int y,vector<int> &postorder,int a,int b){
        if(x>y||a>b) return NULL;
        int i=x;
        TreeNode* node=new TreeNode(postorder[b]);
        while(node->val!=inorder[i]) i++;
        node->left=solve(inorder,x,i-1,postorder,a,a+i-x-1);
        node->right=solve(inorder,i+1,y,postorder,a+i-x,b-1);
        return node;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return solve(inorder,0,inorder.size()-1,postorder,0,postorder.size()-1);
    }
};