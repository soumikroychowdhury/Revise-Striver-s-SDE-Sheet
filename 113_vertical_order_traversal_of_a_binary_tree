/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>> m;
        queue<pair<TreeNode*,pair<int,int>>> q;
        q.push({root,{0,0}});;
        while(!q.empty()){
            auto a=q.front();
            q.pop();
            TreeNode *node=a.first;
            int line=a.second.first,level=a.second.second;
            m[line][level].insert(node->val);
            if(node->left) q.push({node->left,{line-1,level+1}});
            if(node->right) q.push({node->right,{line+1,level+1}});
        }
        vector<vector<int>> ans;
        for(auto line:m){
            vector<int> col;
            for(auto e:line.second) col.insert(col.end(),e.second.begin(),e.second.end());
            ans.push_back(col);
        }
        return ans;
    }
};