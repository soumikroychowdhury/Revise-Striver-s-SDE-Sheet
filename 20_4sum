class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>> ans;
        if(n==0) return ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            long long target1=target-nums[i];
            for(int j=i+1;j<n;j++){
                long long target2=target1-nums[j];
                int front=j+1,back=n-1;
                while(front<back){
                    long long sum=nums[front]+nums[back];
                    if(sum<target2) front++;
                    else if(sum>target2) back--;
                    else{
                        vector<int> v;
                        v.insert(v.end(),{nums[i],nums[j],nums[front],nums[back]});
                        ans.push_back(v);
                        while(front<back&&nums[front]==v[2]) front++;
                        while(front<back&&nums[back]==v[3]) back--;
                    }
                }
                while(j+1<n&&nums[j+1]==nums[j]) j++;
            }
            while(i+1<n&&nums[i+1]==nums[i]) i++;
        }
        return ans;
    }
};