class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int> m;
        for(int i:nums) m[i]++;
        vector<int> ans;
        priority_queue<pair<int,int>> pq;
        for(auto i:m){
            pq.push(make_pair(i.second,i.first));
            if(pq.size()>m.size()-k){
                ans.push_back(pq.top().second);
                pq.pop();
            }
        }
        return ans;
    }
};