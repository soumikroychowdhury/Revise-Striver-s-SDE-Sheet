class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size(),n=nums2.size();
        if(m>n) return findMedianSortedArrays(nums2,nums1);
        int low=0,high=m,median=((m+n)+1)>>1;
        while(low<=high){
            int c1=(low+high)/2;
            int c2=median-c1;
            int l1=(c1==0)?INT_MIN:nums1[c1-1];
            int l2=(c2==0)?INT_MIN:nums2[c2-1];
            int r1=(c1==m)?INT_MAX:nums1[c1];
            int r2=(c2==n)?INT_MAX:nums2[c2];
            if(l1<=r2&&l2<=r1){
                if((m+n)%2) return max(l1,l2);
                else return (max(l1,l2)+min(r1,r2))/2.0;
            }
            else if(l1>r2) high=c1-1;
            else low=c1+1;
        }
        return 0.0;
    }
};