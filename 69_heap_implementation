#include <bits/stdc++.h>
void heapifyup(int arr[],int i){
    while(i!=0&&arr[(i-1)/2]>arr[i]){
        swap(arr[i],arr[(i-1)/2]);
        i=(i-1)/2;
    }
}
void heapifydown(int arr[],int n,int i){
    int l=2*i+1,r=2*i+2,smallest=i;
    if(arr[l]<arr[i]&&l<n) smallest=l;
    if(arr[r]<arr[smallest]&&r<n) smallest=r;
    if(smallest!=i){
        swap(arr[i],arr[smallest]);
        heapifydown(arr,n,smallest);
    }
}
vector<int> minHeap(int n, vector<vector<int>>& q) {
    vector<int> ans;
    int arr[n];
    int size=0;
    for(auto query:q){
        if(query.size()==2){
            int element=query[1];
            size++;
            arr[size-1]=element;
            heapifyup(arr,size-1);
        }
        else{
            int element=arr[0];
            arr[0]=arr[size-1];
            size--;
            heapifydown(arr,size,0);
            ans.push_back(element);
        }
    }
    return ans;
}