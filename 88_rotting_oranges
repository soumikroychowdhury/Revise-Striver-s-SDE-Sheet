class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        if(grid.empty()) return 0;
        int m=grid.size(),n=grid[0].size(),days=0,count=0,total=0;
        queue<pair<int,int>> q;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]!=0) total++;
                if(grid[i][j]==2) q.push({i,j});
            }
        }
        int dirs[5]={0,1,0,-1,0};
        while(!q.empty()){
            int k=q.size();
            count+=k;
            while(k--){
                auto [x,y]=q.front();
                q.pop();
                for(int i=0;i<4;i++){
                    int x1=x+dirs[i],y1=y+dirs[i+1];
                    if(x1<0||y1<0||x1>=m||y1>=n||grid[x1][y1]!=1) continue;
                    grid[x1][y1]=2;
                    q.push({x1,y1});
                }
            }
            if(!q.empty()) days++;
        }
        return total==count?days:-1;
    }
};