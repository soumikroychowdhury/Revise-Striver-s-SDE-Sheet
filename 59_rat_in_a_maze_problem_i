class Solution{
    void solve(vector<vector<int>> &m,int n,vector<string> &ans,vector<vector<int>> &vis,string move,int i,int j,int di[],int dj[]){
        if(i==n-1&&j==n-1){
            ans.push_back(move);
            return;
        }
        string dir="DLRU";
        for(int index=0;index<4;index++){
            int ni=i+di[index],nj=j+dj[index];
            if(ni>=0&&nj>=0&&ni<n&&nj<n&&!vis[ni][nj]&&m[ni][nj]==1){
                vis[i][j]=1;
                solve(m,n,ans,vis,move+dir[index],ni,nj,di,dj);
                vis[i][j]=0;
            }
        }
    }
    public:
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<string> ans;
        vector<vector<int>> vis(n,vector<int>(n,0));
        int di[]={+1,0,0,-1};
        int dj[]={0,-1,+1,0};
        if(m[0][0]==1) solve(m,n,ans,vis,"",0,0,di,dj);
        return ans;
    }
};